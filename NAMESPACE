# Generated by roxygen2: do not edit by hand

export("group_col<-")
export("results<-")
export("subject_col<-")
export("time_col<-")
export(assess_quality)
export(cohens_d)
export(combined_data)
export(construct_MetaboSet)
export(correct_drift)
export(dc_cubic_spline)
export(drop_flagged)
export(drop_qcs)
export(erase_quality)
export(find_clusters)
export(find_connections)
export(finish_log)
export(flag_detection)
export(flag_quality)
export(fold_change)
export(group_col)
export(impute_rf)
export(init_log)
export(inspect_dc)
export(inverse_normalize)
export(log_state)
export(log_text)
export(mark_nas)
export(merge_exprs)
export(merge_metabosets)
export(perform_homoscedasticity_tests)
export(perform_kruskal_wallis)
export(perform_lm)
export(perform_lmer)
export(perform_pairwise_t_test)
export(perform_t_test)
export(perform_welch)
export(plot_dendrogram)
export(plot_dist_density)
export(plot_heatmap)
export(plot_injection_lm)
export(plot_p_histogram)
export(plot_pca)
export(plot_pca_hexbin)
export(plot_sample_boxplots)
export(plot_tsne)
export(plot_tsne_hexbin)
export(pull_features)
export(quality)
export(read_from_excel)
export(results)
export(save_dc_plots)
export(save_group_boxplots)
export(save_group_lineplots)
export(save_subject_line_plots)
export(subject_col)
export(summary_statistics)
export(time_col)
export(visualizations)
export(write_to_excel)
exportMethods("group_col<-")
exportMethods("results<-")
exportMethods("subject_col<-")
exportMethods("time_col<-")
exportMethods(assess_quality)
exportMethods(combined_data)
exportMethods(erase_quality)
exportMethods(flag_detection)
exportMethods(flag_quality)
exportMethods(group_col)
exportMethods(quality)
exportMethods(results)
exportMethods(subject_col)
exportMethods(time_col)
import(methods)
importClassesFrom(Biobase,ExpressionSet)
importFrom(Biobase,"exprs<-")
importFrom(Biobase,"fData<-")
importFrom(Biobase,"pData<-")
importFrom(Biobase,exprs)
importFrom(Biobase,fData)
importFrom(Biobase,featureNames)
importFrom(Biobase,pData)
importFrom(foreach,"%dopar%")
importFrom(magrittr,"%>%")
